/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioteca.vista;

import biblioteca.entidades.BibliotecarioEn;
import biblioteca.entidades.EmpleadoEn;
import biblioteca.entidades.EstudianteEn;
import biblioteca.entidades.LibroEn;
import biblioteca.entidades.PrestamoEn;
import biblioteca.entidades.ReservaEn;
import biblioteca.negocio.EmpleadoNg;
import biblioteca.negocio.EstudianteNg;
import biblioteca.negocio.LibroNg;
import biblioteca.negocio.PrestamoNg;
import com.toedter.calendar.JCalendar;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DIOMEDES GUERRA
 */
public class BibliotecarioV extends javax.swing.JFrame {
 SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
 SimpleDateFormat dfi = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form BibliotecarioV
     */
    public BibliotecarioV() {
        initComponents();
         this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JlabellTitulo = new javax.swing.JLabel();
        JtextCodigoLibroB = new javax.swing.JTextField();
        jLabelCodigoLibro = new javax.swing.JLabel();
        JtextCodigoClienteP = new javax.swing.JTextField();
        jLabelCodigoCliente = new javax.swing.JLabel();
        jButtonBuscarLibro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLibroBuscado = new javax.swing.JTable();
        jButtonPrestar = new javax.swing.JButton();
        jComboBoxTipoUsuario = new javax.swing.JComboBox<>();
        jButtonVolverLogin = new javax.swing.JButton();
        JtextCodigoLibroP = new javax.swing.JTextField();
        jLabelCodigoLibro1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePrestados = new javax.swing.JTable();
        jDateChooserFechaFinal = new com.toedter.calendar.JDateChooser();
        jLabelCodigoLibro2 = new javax.swing.JLabel();
        jButtonSalirPrograma = new javax.swing.JButton();
        jButtonMenuPrincipal = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JlabellTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        JlabellTitulo.setText("SISTEMA BIBLIOTECARIO");
        getContentPane().add(JlabellTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, -1));

        JtextCodigoLibroB.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        JtextCodigoLibroB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtextCodigoLibroBActionPerformed(evt);
            }
        });
        getContentPane().add(JtextCodigoLibroB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 146, 28));

        jLabelCodigoLibro.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        jLabelCodigoLibro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCodigoLibro.setText("Código de libro");
        getContentPane().add(jLabelCodigoLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 146, 20));

        JtextCodigoClienteP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtextCodigoClientePActionPerformed(evt);
            }
        });
        getContentPane().add(JtextCodigoClienteP, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 140, 28));

        jLabelCodigoCliente.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        jLabelCodigoCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCodigoCliente.setText("Código de cliente");
        getContentPane().add(jLabelCodigoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 140, -1));

        jButtonBuscarLibro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ICONOBUSCAR.png"))); // NOI18N
        jButtonBuscarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarLibroActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 32, 28));

        jTableLibroBuscado.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));
        jTableLibroBuscado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableLibroBuscado);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 520, 50));

        jButtonPrestar.setText("Prestar");
        jButtonPrestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrestarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPrestar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 150, 70, -1));

        jComboBoxTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Cliente", "Empleado", "Estudiante" }));
        jComboBoxTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxTipoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 140, 30));

        jButtonVolverLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/INICIAR-SESIO-ICONO (1).png"))); // NOI18N
        jButtonVolverLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverLoginActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolverLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, 40, 40));

        JtextCodigoLibroP.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        JtextCodigoLibroP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtextCodigoLibroPActionPerformed(evt);
            }
        });
        getContentPane().add(JtextCodigoLibroP, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 146, 28));

        jLabelCodigoLibro1.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        jLabelCodigoLibro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCodigoLibro1.setText("Fecha final");
        getContentPane().add(jLabelCodigoLibro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 140, 20));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 780, 10));

        jTablePrestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTablePrestados);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 720, 110));
        getContentPane().add(jDateChooserFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 140, 30));

        jLabelCodigoLibro2.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        jLabelCodigoLibro2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCodigoLibro2.setText("Código de libro");
        getContentPane().add(jLabelCodigoLibro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 146, 20));

        jButtonSalirPrograma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR-ICONO.png"))); // NOI18N
        jButtonSalirPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirProgramaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalirPrograma, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 40, -1));

        jButtonMenuPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/HOME.ICONO.png"))); // NOI18N
        jButtonMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMenuPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, 40, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/WALLPAPER BLANCO BIBLIOTECARIO.jpg"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JtextCodigoLibroBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtextCodigoLibroBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtextCodigoLibroBActionPerformed

    private void JtextCodigoClientePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtextCodigoClientePActionPerformed
     
    }//GEN-LAST:event_JtextCodigoClientePActionPerformed

  public void remover(){
       int filas=jTableLibroBuscado.getRowCount();
         for (int i = filas-1; i >=0; i--) {
             mtabla.removeRow(i);
         }
    }    
    
    
   //CREA LISTA Y OBJECTO 
LibroNg libroNg=new LibroNg();
           List<LibroEn> listaLibros = new ArrayList<LibroEn>();
     int swlimpiar=0;
    boolean estadoBuscar=false;
    private void jButtonBuscarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarLibroActionPerformed
      if(swlimpiar==1){
          remover();
      }
        String codigoLibro;
        Validaciones();
       if(estadoBuscar==true){
           codigoLibro=JtextCodigoLibroB.getText();
           listaLibros=libroNg.FindRegisters(codigoLibro);
           if(listaLibros.isEmpty()==false){
               jTableLibroBuscado.setVisible(true);
               cargarModelo(listaLibros);
                swlimpiar=1;
           }else{
               JOptionPane.showMessageDialog(rootPane, "Libro buscado no se encuentra, verifique codigo","Error de busqueda",JOptionPane.WARNING_MESSAGE);
           }
          
           
             
       }
    }//GEN-LAST:event_jButtonBuscarLibroActionPerformed

int j;
    public boolean ValidarOpcionSeleccionada(){
        String select;
     select=jComboBoxTipoUsuario.getSelectedItem().toString().trim();
       if(select.equalsIgnoreCase("Seleccione Cliente")){
           JOptionPane.showMessageDialog(rootPane, "Seleccione cliente Valido","Error",JOptionPane.ERROR_MESSAGE);
          return false;
      }else{
           if(select.equalsIgnoreCase("Estudiante")){
               j=1;
               return true;
           }else{
               j=2;
               return true;
           }
         
      } 
    }
    
    
    //variables
    boolean estadov=false,estadoVacio=false;
   
    
    public void ValidacionDeCampoVacio() {

        if (!(JtextCodigoClienteP.getText().equals("") )) {
            estadoVacio = true;
        }//validacion de el select
        if (estadoVacio == false) {
            JOptionPane.showMessageDialog(rootPane, "Campo Codigo de cliente vacio, verifique", "ERROR 365", JOptionPane.ERROR_MESSAGE);
        }
    }
            
    private void jComboBoxTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipoUsuarioActionPerformed

    private void jButtonVolverLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverLoginActionPerformed
       LoginV loginV=new LoginV();
       loginV.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButtonVolverLoginActionPerformed

    private void JtextCodigoLibroPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtextCodigoLibroPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtextCodigoLibroPActionPerformed
public boolean VerificarFecha(){
         Date dat=new Date();
         int diaA, mesA, añoA,diaR,mesR,añoR;

         if(jDateChooserFechaFinal.getDate().getTime()>=dat.getTime()){
             return true;
                                                                       }
             return false;
         
             
    } 
    PrestamoNg prestamoNg=new PrestamoNg();
  public void GuardaReserva(){
      //GENERA UNA VARIABLE TIPO (Date) PARA ALMACENAR LA FECHA DE RESERVA
         Date fechaAc=new Date();
    
    // (ValidoGuardar) ES UN SW QUE SE CAMBIA CUANDO NO FALTE NI UN CAMPO OBLIGATORIO PARA LA RESERVA

        
        String tituloLibro,codigoLibro,fechaFinal,fechaInicio,codigoCliente;
        codigoLibro=JtextCodigoLibroP.getText().trim();
        codigoCliente=JtextCodigoClienteP.getText().trim();
        fechaFinal=df.format(jDateChooserFechaFinal.getDate());
        fechaInicio=dfi.format(fechaAc);

        //CREO UN OBJETO RESERVA CON TODA LA INFORMACION DE LA RESERVA LA CUAL FUE SUMINISTRADA POR TECLADO 
        PrestamoEn presta=new PrestamoEn(codigoLibro.toUpperCase(),codigoCliente.toUpperCase(), fechaInicio.toLowerCase(), fechaFinal.toLowerCase());
        
        if(prestamoNg.GuardarPrestamos(presta)){
                   JOptionPane.showMessageDialog(rootPane, "Prestamo guardado exitosamente!");
                                               }else{
                   JOptionPane.showMessageDialog(rootPane, "¡Error al guardar Prestamo!","Error de reserva",JOptionPane.ERROR_MESSAGE);
                                                    }
        //AGREGAR RESERVA PARA MOSTRAR
        mtablas.addRow(new Object[]{codigoLibro.toUpperCase(),codigoCliente.toUpperCase(), fechaInicio.toLowerCase(), fechaFinal.toLowerCase()} );
        jTablePrestados.setModel(mtablas);
                           
        }

boolean validoGuardar=true;
 public void ValidaCamposVacios(){
       
           
           if(jDateChooserFechaFinal.getDate()==null){
             validoGuardar = false;
             JOptionPane.showMessageDialog(rootPane,"Ingrese fecha de reserva","Error",JOptionPane.ERROR_MESSAGE);
                                                        }else{
     validoGuardar = true;
 }
            }



    private void jButtonPrestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrestarActionPerformed
 boolean disponibilidadLibro=false;
boolean disponibildadCliente=false;

        if(JtextCodigoClienteP.getText().length()!=0){
           if(JtextCodigoLibroP.getText().length()!=0){
              
               if(ValidarOpcionSeleccionada()){
                  
                    if(validoGuardar==true){
                       
                       if(VerificarFecha()){
                           disponibilidadLibro=validarDisponibilidadLibro();
                           disponibildadCliente=ValidarExistenciaYDisponibilidad();
                           if(disponibildadCliente==true && disponibilidadLibro==true){
                              GuardaReserva(); 
                              libroNg.ModificarEstadoLibro(JtextCodigoLibroP.getText().trim(),"PRESTADO");
                           }
                           
                       }else{
                         JOptionPane.showMessageDialog(rootPane, "fecha mayor que la actual");
                       }
                       
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Fecha no valida");
                    }         
               }
           }else{
               
               JOptionPane.showMessageDialog(rootPane,"Codigo de cliente vacio","Campos vacio",JOptionPane.ERROR_MESSAGE);
           }
       }else{
           JOptionPane.showMessageDialog(rootPane, "Identificacion de cliente vacia","Campos vacio",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_jButtonPrestarActionPerformed

    private void jButtonSalirProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirProgramaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirProgramaActionPerformed

    private void jButtonMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuPrincipalActionPerformed
        UsuariosV userV=new UsuariosV();
        userV.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonMenuPrincipalActionPerformed
    
    
 
      public boolean validarDisponibilidadLibro(){
       boolean disponibilidad=false;
     listaLibros=libroNg.FindRegisters(JtextCodigoLibroP.getText().trim());
     if(listaLibros.isEmpty()==false){
         disponibilidad=libroNg.LibroDisponible(listaLibros,JtextCodigoLibroP.getText().trim());
         if(disponibilidad==true){
             JOptionPane.showMessageDialog(rootPane, "Libro disponible para prestamo");
                                 }else{
             JOptionPane.showMessageDialog(rootPane, "Libro no disponible para prestamo","Libro no disponible",JOptionPane.ERROR_MESSAGE);
         }
                                      }else{
         JOptionPane.showMessageDialog(rootPane, "Libro no encontrado","Libro no existe",JOptionPane.ERROR_MESSAGE);
                                           }
     return disponibilidad;
      
}
      public boolean ValidarExistenciaYDisponibilidad(){
        
        boolean estudianteValidoPrestamo=false;
        boolean disponibilidad=false;
        boolean empleadoValidoPrestamo=false;
         String carnet , cedula;
         //RECIBE UN BOOLEAN CON LA VALIDACION DE QUE YA SELECCIONO UN TIPO DE USUARIO CORRECTO
        
                
                //VERIFICA UN SW QUE ME DETERMINA EL TIPO DE USUARIO QUE ESCOGIO EL CLIENTE (ESTUDIANTE), PARA VALIDAR INFORMACIÓN
            
                if (j==1) {
                carnet = JtextCodigoClienteP.getText().trim();
                EstudianteNg estudianteNg = new EstudianteNg();
                List<EstudianteEn> listaEstudiantes = new ArrayList<EstudianteEn>();
                listaEstudiantes=estudianteNg.BuscarEstudiante(carnet);
                //VALIDA SI LA LISTA ESTA VACIA, LA CUAL FUE RECIBIDA DE (estudianteNg.BuscarEstudiante(carnet);)
               if(listaEstudiantes.isEmpty()==false){   
                   estudianteValidoPrestamo=estudianteNg.ValidarDisponibilidadEstudiante(listaEstudiantes, carnet);
                   //VALIDA QUE UN ESTUDIANTE ESTE DISPONIBLE PARA PRESTAMO Y MUESTRA MENSAJE DE ESTE
                       if(estudianteValidoPrestamo==true){
                           JOptionPane.showMessageDialog(rootPane, "Estudiante Disponible para prestamo");
                           disponibilidad=estudianteValidoPrestamo;
                                                         }else{
                           JOptionPane.showMessageDialog(rootPane, "Estudiante no disponible para realizar prestamo","No disponible",JOptionPane.ERROR_MESSAGE);
                                                              }
                                                     }else{
                   JOptionPane.showMessageDialog(rootPane, "Estudiante no existe","Busqueda erronea",JOptionPane.ERROR_MESSAGE);
                                                          }
                        }
            
            //VERIFICA UN SW QUE ME DETERMINA EL TIPO DE USUARIO QUE ESCOGIO EL CLIENTE (EMPLEDO), PARA VALIDAR INFORMACIÓN
            if(j==2){
                cedula=JtextCodigoClienteP.getText().trim();
                EmpleadoNg empleadoNg=new EmpleadoNg();
                List<EmpleadoEn> listaEmpleados = new ArrayList<EmpleadoEn>();
                listaEmpleados=empleadoNg.BuscarEmpleado(cedula);
                //VALIDA SI LA LISTA DE EMPLEADO ESTA VACIA, LA CUAL FUE RECIBIDA DE (empleadoNg.BuscarEmpleado(cedula))
                if(listaEmpleados.isEmpty()==false){
                  empleadoValidoPrestamo=empleadoNg.ValidarDisponibilidadEmpleado(listaEmpleados, cedula);
                  //VALIDA QUE UN EMPLEADO ESTE DISPONIBLE PARA PRESTAMO Y MUESTRA MENSAJE DE ESTE
                      if(empleadoValidoPrestamo==true){
                          JOptionPane.showMessageDialog(rootPane, "Empleado disponible para reservar");
                          disponibilidad=empleadoValidoPrestamo;
                                                      }else{
                         JOptionPane.showMessageDialog(rootPane,"Empleado no disponible para realizar reserva","No disponible",JOptionPane.ERROR_MESSAGE);
                                                           }
                                                    }else{
                    JOptionPane.showMessageDialog(rootPane, "Empleado no existe","Error de busqueda",JOptionPane.ERROR_MESSAGE);
                                                         }
            }
                                
       //RETORNA LA APROVACION O DESAPROVACION, SI UN ESTUDIANTE O EMPLEADO ESTAN DISPONIBLES PARA PODER REALIZAR LA RESERVA
        return disponibilidad;
    }
    
      
    //MOSTRAR EL LIBRO BUSCADO
      public void cargarModelo(List<LibroEn> listaLibros){
        for(LibroEn li: listaLibros){
           mtabla.addRow(new Object[]{li.getNombreLibro(),li.getAutor(),li.getCodigoLibro(),li.getEstadoLibro()} ); 
        }
        jTableLibroBuscado.setModel(mtabla);
     
       
    }
       Object[][] filas2=null;
    String []encabezados2={"CÓDIGO LIBRO", "CÓDIGO CLIENTE","FECHA INICIO","FECHA FINAL" };
    DefaultTableModel mtablas= new DefaultTableModel(filas2,encabezados2);
    
    
     String []encabezados={"TITULO","AUTOR ","CÓDIGO ","ESTADO "};
    Object[][] filas=null;
    DefaultTableModel mtabla=new DefaultTableModel(filas,encabezados);
    
    
    
    //VALIDACION DE QUE NO ESTE VACIO
    public void Validaciones(){
        if("".equals(JtextCodigoLibroB.getText())){
            JOptionPane.showMessageDialog(rootPane, "Código de libro vacio, por favir ingrese un codigo","Error de busqueda",JOptionPane.ERROR_MESSAGE);
        }else{
            estadoBuscar=true;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BibliotecarioV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BibliotecarioV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BibliotecarioV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BibliotecarioV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BibliotecarioV().setVisible(true);
            }
        });
    }
 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JlabellTitulo;
    private javax.swing.JTextField JtextCodigoClienteP;
    private javax.swing.JTextField JtextCodigoLibroB;
    private javax.swing.JTextField JtextCodigoLibroP;
    private javax.swing.JButton jButtonBuscarLibro;
    private javax.swing.JButton jButtonMenuPrincipal;
    private javax.swing.JButton jButtonPrestar;
    private javax.swing.JButton jButtonSalirPrograma;
    private javax.swing.JButton jButtonVolverLogin;
    private javax.swing.JComboBox<String> jComboBoxTipoUsuario;
    private com.toedter.calendar.JDateChooser jDateChooserFechaFinal;
    private javax.swing.JLabel jLabelCodigoCliente;
    private javax.swing.JLabel jLabelCodigoLibro;
    private javax.swing.JLabel jLabelCodigoLibro1;
    private javax.swing.JLabel jLabelCodigoLibro2;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableLibroBuscado;
    private javax.swing.JTable jTablePrestados;
    // End of variables declaration//GEN-END:variables
}
